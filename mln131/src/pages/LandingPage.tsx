import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { motion, AnimatePresence } from "framer-motion";
import videoBg from "../assets/mln-bg-h264.mp4";

const LandingPage: React.FC = () => {
  const navigate = useNavigate();
  const [showIntro, setShowIntro] = useState(false);
  const [step, setStep] = useState(0);

  const handleStart = () => setShowIntro(true);

const handleNextStep = () => {
  if (step < introSteps.length - 1) {
    setStep(step + 1);
  } else {
    // üü¢ Cu·ªôn trang l√™n ƒë·∫ßu tr∆∞·ªõc khi chuy·ªÉn sang trang /intro
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
    navigate("/intro");
  }
};


  // ===== N·ªôi dung ƒë√£ ch·ªânh theo ch·ªß ƒë·ªÅ "D√¢n ch·ªß XHCN" =====
  const introSteps = [
    {
      title: "D√¢n ch·ªß X√£ h·ªôi Ch·ªß nghƒ©a t·∫°i Vi·ªát Nam",
      subtitle:
        "T·ª´ l√Ω lu·∫≠n ƒë·∫øn th·ª±c ti·ªÖn ‚Äì n·ªÅn t·∫£ng ch√≠nh tr·ªã, ƒë·ªông l·ª±c ph√°t tri·ªÉn ƒë·∫•t n∆∞·ªõc",
      actionText: "Ti·∫øp t·ª•c",
    },
    {
      title: "M·ª•c ti√™u h·ªçc:",
      listItems: [
        "Hi·ªÉu b·∫£n ch·∫•t c·ªët l√µi: 'D√¢n l√† g·ªëc, d√¢n l√†m ch·ªß'",
        "N·∫Øm ƒë∆∞·ª£c qu√° tr√¨nh h√¨nh th√†nh v√† ph√°t tri·ªÉn d√¢n ch·ªß XHCN",
        "Nh·∫≠n di·ªán c√°ch th·ª©c d√¢n ch·ªß ƒë∆∞·ª£c th·ª±c h√†nh trong ƒë·ªùi s·ªëng hi·ªán nay",
        "Li√™n h·ªá th·ª±c ti·ªÖn: ph√°t huy d√¢n ch·ªß, tƒÉng c∆∞·ªùng ph√°p ch·∫ø v√† k·ª∑ c∆∞∆°ng",
      ],
      actionText: "B·∫Øt ƒë·∫ßu h·ªçc",
    },
  ];

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: { opacity: 1, transition: { staggerChildren: 0.2 } },
    exit: { opacity: 0, transition: { duration: 0.5 } },
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0 },
  };

  return (
    <div className="relative w-full min-h-screen flex items-center justify-center overflow-hidden">
      {/* Video n·ªÅn */}
      <video
        autoPlay
        loop
        muted
        playsInline
        preload="auto"
        className="absolute inset-0 w-full h-full object-cover z-0"
      >
        <source src={videoBg} type="video/mp4" />
      </video>

      {/* L·ªõp ph·ªß m·ªù */}
      <div className="absolute inset-0 bg-black/60 z-10" />

      {/* N·ªôi dung ch√≠nh */}
      <AnimatePresence mode="wait">
        {!showIntro ? (
          <motion.div
            key="landing"
            className="relative z-20 flex flex-col items-center justify-center text-center w-full px-4"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ duration: 0.5 }}
          >
            <motion.h1
              className="text-4xl md:text-6xl font-extrabold text-white mb-4 drop-shadow-lg"
              initial={{ opacity: 0, y: -40 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
            >
              Ch√†o m·ª´ng ƒë·∫øn v·ªõi b√†i h·ªçc
              <br />
              <span className="text-yellow-300">
                ‚ÄúD√¢n ch·ªß X√£ h·ªôi Ch·ªß nghƒ©a t·∫°i Vi·ªát Nam‚Äù
              </span>
            </motion.h1>

            <motion.p
              className="text-lg md:text-2xl text-white/90 mb-8 font-medium drop-shadow"
              initial={{ opacity: 0, y: 40 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.3 }}
            >
              Kh√°m ph√° b·∫£n ch·∫•t, l·ªãch s·ª≠ v√† th·ª±c ti·ªÖn c·ªßa n·ªÅn d√¢n ch·ªß Vi·ªát Nam ‚Äì
              n∆°i quy·ªÅn l·ª±c thu·ªôc v·ªÅ Nh√¢n d√¢n.
            </motion.p>

            <motion.button
              onClick={handleStart}
              className="bg-[#6e7fdc] hover:bg-[#2a2e6e] text-white px-8 py-3 rounded-lg text-lg font-semibold shadow transition"
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.7, delay: 0.6 }}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              B·∫Øt ƒë·∫ßu
            </motion.button>
          </motion.div>
        ) : (
          <motion.div
            key="intro"
            className="relative z-20 flex flex-col items-center justify-center text-center w-full px-4"
            initial="hidden"
            animate="visible"
            exit="exit"
            variants={containerVariants}
          >
            <motion.h1
              className="text-4xl md:text-5xl font-extrabold text-white mb-4 drop-shadow-lg"
              variants={itemVariants}
            >
              {introSteps[step].title}
            </motion.h1>

            {introSteps[step].subtitle && (
              <motion.p
                className="text-lg md:text-2xl text-white/90 mb-8 font-medium drop-shadow"
                variants={itemVariants}
              >
                {introSteps[step].subtitle}
              </motion.p>
            )}

            {introSteps[step].listItems && (
              <motion.ul
                className="text-left text-lg md:text-xl text-white/90 mb-8 font-medium space-y-2 max-w-xl mx-auto"
                variants={containerVariants}
              >
                {introSteps[step].listItems?.map((item, index) => (
                  <motion.li
                    key={index}
                    className="flex items-start"
                    variants={itemVariants}
                  >
                    <span className="mr-2 text-green-400">‚úì</span> {item}
                  </motion.li>
                ))}
              </motion.ul>
            )}

            <motion.button
              onClick={handleNextStep}
              className="bg-[#6e7fdc] hover:bg-[#2a2e6e] text-white px-8 py-3 rounded-lg text-lg font-semibold shadow transition mt-8"
              variants={itemVariants}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              {introSteps[step].actionText}
            </motion.button>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
};

export default LandingPage;
